# coding: utf-8

"""
    OANDA v20 REST API

    The full OANDA v20 REST API Specification. This specification defines how to interact with v20 Accounts, Trades, Orders, Pricing and more. To authenticate use the string 'Bearer ' followed by the token which can be obtained at https://www.oanda.com/demo-account/tpa/personal_token  # noqa: E501

    OpenAPI spec version: 3.0.23
    Contact: api@oanda.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class TransactionRejectReason(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    INTERNAL_SERVER_ERROR = "INTERNAL_SERVER_ERROR"
    INSTRUMENT_PRICE_UNKNOWN = "INSTRUMENT_PRICE_UNKNOWN"
    ACCOUNT_NOT_ACTIVE = "ACCOUNT_NOT_ACTIVE"
    ACCOUNT_LOCKED = "ACCOUNT_LOCKED"
    ACCOUNT_ORDER_CREATION_LOCKED = "ACCOUNT_ORDER_CREATION_LOCKED"
    ACCOUNT_CONFIGURATION_LOCKED = "ACCOUNT_CONFIGURATION_LOCKED"
    ACCOUNT_DEPOSIT_LOCKED = "ACCOUNT_DEPOSIT_LOCKED"
    ACCOUNT_WITHDRAWAL_LOCKED = "ACCOUNT_WITHDRAWAL_LOCKED"
    ACCOUNT_ORDER_CANCEL_LOCKED = "ACCOUNT_ORDER_CANCEL_LOCKED"
    INSTRUMENT_NOT_TRADEABLE = "INSTRUMENT_NOT_TRADEABLE"
    PENDING_ORDERS_ALLOWED_EXCEEDED = "PENDING_ORDERS_ALLOWED_EXCEEDED"
    ORDER_ID_UNSPECIFIED = "ORDER_ID_UNSPECIFIED"
    ORDER_DOESNT_EXIST = "ORDER_DOESNT_EXIST"
    ORDER_IDENTIFIER_INCONSISTENCY = "ORDER_IDENTIFIER_INCONSISTENCY"
    TRADE_ID_UNSPECIFIED = "TRADE_ID_UNSPECIFIED"
    TRADE_DOESNT_EXIST = "TRADE_DOESNT_EXIST"
    TRADE_IDENTIFIER_INCONSISTENCY = "TRADE_IDENTIFIER_INCONSISTENCY"
    INSUFFICIENT_MARGIN = "INSUFFICIENT_MARGIN"
    INSTRUMENT_MISSING = "INSTRUMENT_MISSING"
    INSTRUMENT_UNKNOWN = "INSTRUMENT_UNKNOWN"
    UNITS_MISSING = "UNITS_MISSING"
    UNITS_INVALID = "UNITS_INVALID"
    UNITS_PRECISION_EXCEEDED = "UNITS_PRECISION_EXCEEDED"
    UNITS_LIMIT_EXCEEDED = "UNITS_LIMIT_EXCEEDED"
    UNITS_MIMIMUM_NOT_MET = "UNITS_MIMIMUM_NOT_MET"
    PRICE_MISSING = "PRICE_MISSING"
    PRICE_INVALID = "PRICE_INVALID"
    PRICE_PRECISION_EXCEEDED = "PRICE_PRECISION_EXCEEDED"
    PRICE_DISTANCE_MISSING = "PRICE_DISTANCE_MISSING"
    PRICE_DISTANCE_INVALID = "PRICE_DISTANCE_INVALID"
    PRICE_DISTANCE_PRECISION_EXCEEDED = "PRICE_DISTANCE_PRECISION_EXCEEDED"
    PRICE_DISTANCE_MAXIMUM_EXCEEDED = "PRICE_DISTANCE_MAXIMUM_EXCEEDED"
    PRICE_DISTANCE_MINIMUM_NOT_MET = "PRICE_DISTANCE_MINIMUM_NOT_MET"
    TIME_IN_FORCE_MISSING = "TIME_IN_FORCE_MISSING"
    TIME_IN_FORCE_INVALID = "TIME_IN_FORCE_INVALID"
    TIME_IN_FORCE_GTD_TIMESTAMP_MISSING = "TIME_IN_FORCE_GTD_TIMESTAMP_MISSING"
    TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST = "TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST"
    PRICE_BOUND_INVALID = "PRICE_BOUND_INVALID"
    PRICE_BOUND_PRECISION_EXCEEDED = "PRICE_BOUND_PRECISION_EXCEEDED"
    ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS = "ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS"
    TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED = "TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED"
    CLIENT_ORDER_ID_INVALID = "CLIENT_ORDER_ID_INVALID"
    CLIENT_ORDER_ID_ALREADY_EXISTS = "CLIENT_ORDER_ID_ALREADY_EXISTS"
    CLIENT_ORDER_TAG_INVALID = "CLIENT_ORDER_TAG_INVALID"
    CLIENT_ORDER_COMMENT_INVALID = "CLIENT_ORDER_COMMENT_INVALID"
    CLIENT_TRADE_ID_INVALID = "CLIENT_TRADE_ID_INVALID"
    CLIENT_TRADE_ID_ALREADY_EXISTS = "CLIENT_TRADE_ID_ALREADY_EXISTS"
    CLIENT_TRADE_TAG_INVALID = "CLIENT_TRADE_TAG_INVALID"
    CLIENT_TRADE_COMMENT_INVALID = "CLIENT_TRADE_COMMENT_INVALID"
    ORDER_FILL_POSITION_ACTION_MISSING = "ORDER_FILL_POSITION_ACTION_MISSING"
    ORDER_FILL_POSITION_ACTION_INVALID = "ORDER_FILL_POSITION_ACTION_INVALID"
    TRIGGER_CONDITION_MISSING = "TRIGGER_CONDITION_MISSING"
    TRIGGER_CONDITION_INVALID = "TRIGGER_CONDITION_INVALID"
    ORDER_PARTIAL_FILL_OPTION_MISSING = "ORDER_PARTIAL_FILL_OPTION_MISSING"
    ORDER_PARTIAL_FILL_OPTION_INVALID = "ORDER_PARTIAL_FILL_OPTION_INVALID"
    INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL = "INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL"
    TAKE_PROFIT_ORDER_ALREADY_EXISTS = "TAKE_PROFIT_ORDER_ALREADY_EXISTS"
    TAKE_PROFIT_ON_FILL_PRICE_MISSING = "TAKE_PROFIT_ON_FILL_PRICE_MISSING"
    TAKE_PROFIT_ON_FILL_PRICE_INVALID = "TAKE_PROFIT_ON_FILL_PRICE_INVALID"
    TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED = "TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED"
    TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING = "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING"
    TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID = "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID"
    TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING = "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING"
    TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST = "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST"
    TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID = "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID"
    TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID = "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID"
    TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID = "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID"
    TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING = "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING"
    TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID = "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID"
    STOP_LOSS_ORDER_ALREADY_EXISTS = "STOP_LOSS_ORDER_ALREADY_EXISTS"
    STOP_LOSS_ORDER_GUARANTEED_REQUIRED = "STOP_LOSS_ORDER_GUARANTEED_REQUIRED"
    STOP_LOSS_ORDER_GUARANTEED_PRICE_WITHIN_SPREAD = "STOP_LOSS_ORDER_GUARANTEED_PRICE_WITHIN_SPREAD"
    STOP_LOSS_ORDER_GUARANTEED_NOT_ALLOWED = "STOP_LOSS_ORDER_GUARANTEED_NOT_ALLOWED"
    STOP_LOSS_ORDER_GUARANTEED_HALTED_CREATE_VIOLATION = "STOP_LOSS_ORDER_GUARANTEED_HALTED_CREATE_VIOLATION"
    STOP_LOSS_ORDER_GUARANTEED_HALTED_TIGHTEN_VIOLATION = "STOP_LOSS_ORDER_GUARANTEED_HALTED_TIGHTEN_VIOLATION"
    STOP_LOSS_ORDER_GUARANTEED_HEDGING_NOT_ALLOWED = "STOP_LOSS_ORDER_GUARANTEED_HEDGING_NOT_ALLOWED"
    STOP_LOSS_ORDER_GUARANTEED_MINIMUM_DISTANCE_NOT_MET = "STOP_LOSS_ORDER_GUARANTEED_MINIMUM_DISTANCE_NOT_MET"
    STOP_LOSS_ORDER_NOT_CANCELABLE = "STOP_LOSS_ORDER_NOT_CANCELABLE"
    STOP_LOSS_ORDER_NOT_REPLACEABLE = "STOP_LOSS_ORDER_NOT_REPLACEABLE"
    STOP_LOSS_ORDER_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED = "STOP_LOSS_ORDER_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED"
    STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_SPECIFIED = "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_SPECIFIED"
    STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_MISSING = "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_MISSING"
    STOP_LOSS_ON_FILL_REQUIRED_FOR_PENDING_ORDER = "STOP_LOSS_ON_FILL_REQUIRED_FOR_PENDING_ORDER"
    STOP_LOSS_ON_FILL_GUARANTEED_NOT_ALLOWED = "STOP_LOSS_ON_FILL_GUARANTEED_NOT_ALLOWED"
    STOP_LOSS_ON_FILL_GUARANTEED_REQUIRED = "STOP_LOSS_ON_FILL_GUARANTEED_REQUIRED"
    STOP_LOSS_ON_FILL_PRICE_MISSING = "STOP_LOSS_ON_FILL_PRICE_MISSING"
    STOP_LOSS_ON_FILL_PRICE_INVALID = "STOP_LOSS_ON_FILL_PRICE_INVALID"
    STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED = "STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED"
    STOP_LOSS_ON_FILL_GUARANTEED_MINIMUM_DISTANCE_NOT_MET = "STOP_LOSS_ON_FILL_GUARANTEED_MINIMUM_DISTANCE_NOT_MET"
    STOP_LOSS_ON_FILL_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED = "STOP_LOSS_ON_FILL_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED"
    STOP_LOSS_ON_FILL_DISTANCE_INVALID = "STOP_LOSS_ON_FILL_DISTANCE_INVALID"
    STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED = "STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED"
    STOP_LOSS_ON_FILL_DISTANCE_PRECISION_EXCEEDED = "STOP_LOSS_ON_FILL_DISTANCE_PRECISION_EXCEEDED"
    STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_SPECIFIED = "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_SPECIFIED"
    STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_MISSING = "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_MISSING"
    STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING = "STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING"
    STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID = "STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID"
    STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING = "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING"
    STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST = "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST"
    STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID = "STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID"
    STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID = "STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID"
    STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID = "STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID"
    STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING = "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING"
    STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID = "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID"
    TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS = "TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS"
    TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING = "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING"
    TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID = "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID"
    TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED = "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED"
    TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED = "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED"
    TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET = "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET"
    TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING = "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING"
    TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID = "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID"
    TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING = "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING"
    TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST = "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST"
    TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID = "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID"
    TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID = "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID"
    TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID = "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID"
    TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED = "TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED"
    TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING = "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING"
    TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID = "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID"
    CLOSE_TRADE_TYPE_MISSING = "CLOSE_TRADE_TYPE_MISSING"
    CLOSE_TRADE_PARTIAL_UNITS_MISSING = "CLOSE_TRADE_PARTIAL_UNITS_MISSING"
    CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE = "CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE"
    CLOSEOUT_POSITION_DOESNT_EXIST = "CLOSEOUT_POSITION_DOESNT_EXIST"
    CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION = "CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION"
    CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE = "CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE"
    CLOSEOUT_POSITION_REJECT = "CLOSEOUT_POSITION_REJECT"
    CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING = "CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING"
    MARKUP_GROUP_ID_INVALID = "MARKUP_GROUP_ID_INVALID"
    POSITION_AGGREGATION_MODE_INVALID = "POSITION_AGGREGATION_MODE_INVALID"
    ADMIN_CONFIGURE_DATA_MISSING = "ADMIN_CONFIGURE_DATA_MISSING"
    MARGIN_RATE_INVALID = "MARGIN_RATE_INVALID"
    MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT = "MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT"
    ALIAS_INVALID = "ALIAS_INVALID"
    CLIENT_CONFIGURE_DATA_MISSING = "CLIENT_CONFIGURE_DATA_MISSING"
    MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL = "MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL"
    AMOUNT_INVALID = "AMOUNT_INVALID"
    INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS"
    AMOUNT_MISSING = "AMOUNT_MISSING"
    FUNDING_REASON_MISSING = "FUNDING_REASON_MISSING"
    CLIENT_EXTENSIONS_DATA_MISSING = "CLIENT_EXTENSIONS_DATA_MISSING"
    REPLACING_ORDER_INVALID = "REPLACING_ORDER_INVALID"
    REPLACING_TRADE_ID_INVALID = "REPLACING_TRADE_ID_INVALID"

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
    }

    attribute_map = {
    }

    def __init__(self):  # noqa: E501
        """TransactionRejectReason - a model defined in Swagger"""  # noqa: E501
        self.discriminator = None

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TransactionRejectReason):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
